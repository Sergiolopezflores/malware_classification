# import numpy as np
# import json

# """ # Cargar los datos desde el archivo .npy
# datos = np.load('files_lists_tagmaps=executable_classification.npy', allow_pickle=True)

# # Guardar los datos en un archivo JSON
# with open('datos_editables.json', 'w') as f:
#     json.dump(datos.tolist(), f) """


# # Cargar los datos desde el archivo JSON
# with open('datos_editables.json', 'r') as f:
#     datos = json.load(f)

# # Convertir los datos a un arreglo NumPy
# datos_np = np.array(datos)

# # Guardar los datos en un archivo .npy
# np.save('files_lists_tagmaps=executable_classification.npy', datos_np)


import numpy as np

# Cargar el archivo .npy
archivo = '/ahma-hub/analysis-main/traces_40bd_reduced_dataset/aes-gonacry-0a24eb0c91779bffbc52d50119f76e32.npy'  # Cambia esto por la ruta de tu archivo
datos = np.load(archivo, allow_pickle=True)

# Crear y escribir el contenido en un archivo de texto
with open('dat_pasado_automaticamente.txt', 'w') as f:
    f.write("Tipo de datos: " + str(type(datos)) + "\n")
    f.write("Forma de los datos: " + str(datos.shape) + "\n")

    for i, array in enumerate(datos):
        f.write(f"\nArray {i}:\n")
        f.write(f"  Tipo: {type(array)}\n")
        f.write(f"  Forma: {array.shape}\n")
        
        # Si es un array numpy, mostramos estadísticas básicas
        if isinstance(array, np.ndarray):
            f.write(f"  dtype: {array.dtype}\n")
            f.write(f"  Min: {np.min(array)}\n")
            f.write(f"  Max: {np.max(array)}\n")
            f.write(f"  Mean: {np.mean(array)}\n")
            f.write(f"  Std: {np.std(array)}\n")
            
            # Escribir una pequeña parte del array para revisar
            f.write("  Contenido (primeros 10 elementos):\n")
            if array.ndim == 1:
                f.write(f"    {array[:10]}\n")
            else:
                f.write(f"    {array[:10, :10]}\n")  # Modificar según las dimensiones relevantes
        else:
            f.write("  Contenido (parcial):\n")
            f.write(f"    {str(array)[:1000]}...\n")  # Limitar la salida a los primeros 1000 caracteres

print("Contenido del archivo guardado en 'contenido.txt'")







